using System.Collections.Generic;

namespace Generators2
{
    public static class GeneratorsExercise2
    {
        // Write a method that implements a bounded 
        // generator, providing the first n values
        // for the sequence of integers that follows
        // the pattern prev + 2, prev x 2, prev + 2, etc.
        // where n is passed in to the method.
        //
        // The method should be called AddTwoThenDouble()
        // and should take a single integer parameter.

        // public static ... AddTwoThenDouble(int n)
        // {
        // }
        //// START SOLUTION ////
        public static IEnumerable<int> AddTwoThenDouble(int n)
        {
            var val = 0;
            var count = 0;
            while (true)
            {
                val += 2;
                yield return val;
                count++;
                if (count == n) yield break;
                val *= 2;
                yield return val;
                count++;
                if (count == n) yield break;
            }
        }
        //// END SOLUTION ////
    }
}